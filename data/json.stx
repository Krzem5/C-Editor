{
	"name": "JSON",
	"extensions": [
		"json"
	],
	"base_scope": [
		"text"
	],
	"data": [
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "link",
				"index": 1
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "link",
				"index": 4
			},
			{
				"type": "link",
				"index": 5
			},
			{
				"type": "link",
				"index": 7
			},
			{
				"type": "link",
				"index": 2
			},
			{
				"type": "link",
				"index": 6
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "\\[",
				"groups": {},
				"scope": [],
				"push": 10,
				"pop": false
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "/\\*\\*(?!/)",
				"groups": {},
				"scope": [],
				"push": 11,
				"pop": false
			},
			{
				"type": "regex",
				"regex": "/\\*",
				"groups": {},
				"scope": [],
				"push": 12,
				"pop": false
			},
			{
				"type": "regex",
				"regex": "(//).*$\\n?",
				"groups": {
					"1": []
				},
				"scope": [
					"comment"
				],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "\\b(?:true|false|null)\\b",
				"groups": {},
				"scope": [
					"constant"
				],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "(-?)((?:0|[1-9]\\d*)(?:(?:(\\.)\\d+)(?:[eE][-+]?\\d+)?|(?:[eE][-+]?\\d+)))",
				"groups": {
					"1": [
						"operator"
					],
					"2": [
						"number"
					],
					"3": [
						"separator"
					]
				},
				"scope": [],
				"push": -1,
				"pop": false
			},
			{
				"type": "regex",
				"regex": "(-?)(0|[1-9]\\d*)",
				"groups": {
					"1": [
						"operator"
					],
					"2": [
						"number"
					]
				},
				"scope": [],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "\\{",
				"groups": {},
				"scope": [],
				"push": 13,
				"pop": false
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "\"",
				"groups": {},
				"scope": [],
				"push": 8,
				"pop": false
			}
		],
		[
			{
				"type": "scope",
				"scope": [
					"string"
				]
			},
			{
				"type": "regex",
				"regex": "\"",
				"groups": {},
				"scope": [],
				"push": -1,
				"pop": true
			},
			{
				"type": "link",
				"index": 9
			},
			{
				"type": "regex",
				"regex": "$\\n?",
				"groups": {},
				"scope": [
					"invalid"
				],
				"push": -1,
				"pop": true
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": "(?x:                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}  # and four hex digits\n  )\n)",
				"groups": {},
				"scope": [
					"escape"
				],
				"push": -1,
				"pop": false
			},
			{
				"type": "regex",
				"regex": "\\\\.",
				"groups": {},
				"scope": [
					"invalid"
				],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "scope",
				"scope": []
			},
			{
				"type": "regex",
				"regex": "\\]",
				"groups": {},
				"scope": [],
				"push": -1,
				"pop": true
			},
			{
				"type": "link",
				"index": 1
			},
			{
				"type": "regex",
				"regex": ",",
				"groups": {},
				"scope": [
					"separator"
				],
				"push": -1,
				"pop": false
			},
			{
				"type": "regex",
				"regex": "[^\\s\\]]",
				"groups": {},
				"scope": [
					"invalid"
				],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "scope",
				"scope": [
					"comment"
				]
			},
			{
				"type": "regex",
				"regex": "\\*/",
				"groups": {},
				"scope": [],
				"push": -1,
				"pop": true
			},
			{
				"type": "regex",
				"regex": "^\\s*(\\*)(?!/)",
				"groups": {
					"1": []
				},
				"scope": [],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "scope",
				"scope": [
					"comment"
				]
			},
			{
				"type": "regex",
				"regex": "\\*/",
				"groups": {},
				"scope": [],
				"push": -1,
				"pop": true
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "scope",
				"scope": []
			},
			{
				"type": "regex",
				"regex": "\\}",
				"groups": {},
				"scope": [],
				"push": -1,
				"pop": true
			},
			{
				"type": "regex",
				"regex": "\"",
				"groups": {},
				"scope": [],
				"push": 14,
				"pop": false
			},
			{
				"type": "regex",
				"regex": ":",
				"groups": {},
				"scope": [
					"separator"
				],
				"push": 15,
				"pop": false
			},
			{
				"type": "regex",
				"regex": "[^\\s\\}]",
				"groups": {},
				"scope": [
					"invalid"
				],
				"push": -1,
				"pop": false
			}
		],
		[
			{
				"type": "rewind",
				"count": 0
			},
			{
				"type": "scope",
				"scope": [
					"string"
				]
			},
			{
				"type": "link",
				"index": 8
			}
		],
		[
			{
				"type": "link",
				"index": 3
			},
			{
				"type": "regex",
				"regex": ",|\\s?(?=\\})",
				"groups": {},
				"scope": [
					"invalid"
				],
				"push": -1,
				"pop": true
			},
			{
				"type": "regex",
				"regex": "(?=\\S)",
				"groups": {},
				"scope": [],
				"push": -1,
				"pop": false
			}
		]
	]
}